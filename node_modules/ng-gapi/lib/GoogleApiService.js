import { Observable } from "rxjs";
import { Injectable } from "@angular/core";
import { GoogleApiConfig } from "./config/GoogleApiConfig";
var GoogleApiService = (function () {
    function GoogleApiService(config) {
        this.gapiUrl = 'https://apis.google.com/js/platform.js';
        this.isLoaded = false;
        this.config = new GoogleApiConfig(config);
        this.loadGapi();
    }
    GoogleApiService.factory = function (configs) {
        return new GoogleApiService(configs);
    };
    GoogleApiService.prototype.onLoad = function (callback) {
        if (this.isLoaded) {
            callback();
            return;
        }
        this.loadGapi().subscribe(callback);
    };
    GoogleApiService.prototype.getConfig = function () {
        return this.config;
    };
    GoogleApiService.prototype.loadGapi = function () {
        var _this = this;
        return Observable.create(function (observer) {
            var node = document.createElement('script');
            node.src = _this.gapiUrl;
            node.type = 'text/javascript';
            node.async = true;
            node.charset = 'utf-8';
            document.getElementsByTagName('head')[0].appendChild(node);
            node.onload = function () {
                observer.next();
                _this.isLoaded = true;
            };
        });
    };
    return GoogleApiService;
}());
export { GoogleApiService };
GoogleApiService.decorators = [
    { type: Injectable },
];
/** @nocollapse */
GoogleApiService.ctorParameters = function () { return [
    null,
]; };
//# sourceMappingURL=GoogleApiService.js.map