import { Injectable } from "@angular/core";
import { Observable } from "rxjs";
import { GoogleApiService } from "./GoogleApiService";
var GoogleAuthService = (function () {
    function GoogleAuthService(googleApi) {
        var _this = this;
        this.googleApi = googleApi;
        this.GoogleAuth = undefined;
        googleApi.onLoad(function () {
            _this.loadGapiAuth();
        });
    }
    GoogleAuthService.prototype.getAuth = function () {
        if (!this.GoogleAuth) {
            return this.loadGapiAuth();
        }
        return Observable.of(this.GoogleAuth);
    };
    GoogleAuthService.prototype.loadGapiAuth = function () {
        var _this = this;
        return Observable.create(function (observer) {
            gapi.load('auth2', function () {
                var auth = gapi.auth2.init(_this.googleApi.getConfig().getConfigs());
                observer.next(auth);
                _this.GoogleAuth = auth;
                return auth;
            });
        });
    };
    GoogleAuthService.factory = function (googleApi) {
        return new GoogleAuthService(googleApi);
    };
    return GoogleAuthService;
}());
export { GoogleAuthService };
GoogleAuthService.decorators = [
    { type: Injectable },
];
/** @nocollapse */
GoogleAuthService.ctorParameters = function () { return [
    { type: GoogleApiService, },
]; };
//# sourceMappingURL=GoogleAuthService.js.map